spamsite.org
[[~/gh-repos/vue/spamsite]]
[[~/gh-repos/vue/spamsite/index.html][local index.html]]
[[https://gibsonhdrew.github.io/spamsite/][GitHub Pages Link]]

WP api usage: 
    'https://public-api.wordpress.com/wp/v2/sites/[site_id]/posts/?per_page=100'

* Shared Components
** htmlhead
   #+BEGIN_SRC html :noweb yes :noweb-ref htmlhead
   <!DOCTYPE html>
   <html lang='en'>
   <head>
       <meta charset='utf-8'>
       <meta name='viewport' content='width=device-width,initial-scale=1' />
       <title>Specially Processed American Me</title>
       <link href="https://fonts.googleapis.com/css?family=Crimson+Text" rel="stylesheet">
       <style media='screen' type='text/css'>
           <<cssd>>
       </style>
       <style media='screen' type='text/css'>
           <<cssm>>
       </style>
   </head>
   #+END_SRC 
   
** vueLink
   #+BEGIN_SRC html :noweb-ref vueLink
    <!-- development version, includes helpful console warnings -->
    <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>

    <!-- production version, optimized for size and speed -->
    <!--  <script src="https://cdn.jsdelivr.net/npm/vue"></script> -->
   #+END_SRC 

** nav
   #+BEGIN_SRC html :noweb-ref nav
       <div class='nav'>
           <a href="./index.html"><h2 class='pageTitle'>specially processed american me</h2></a>
           <div class='navItems'>
               <a href="./about.html"><h3 class='navItem'>about</h3></a>
               <a href="./recipes.html"><h3 class='navItem'>stories and recipes</h3></a>
               <a href="./contact.html"><h3 class='navItem'>contact</h3></a>
           </div>
       </div>
   #+END_SRC 
   
* [[CSS]]
** Desktop
   #+BEGIN_SRC css :noweb-ref cssd
   body {
       font-family: "Crimson Text", serif;
       margin-top: 0;
       margin-left: 0;
       width: 100vw;
       background-color: #ffd1d1;
   }
   .displayRecipes {
       visibility: hidden;
   }
   .recipesDiv {
       /* border: 2px solid cyan; */
       display: flex;
       justify-content: flex-start;
       flex-wrap: wrap;
   }
   .pageHeader {
       text-align: center;
   }
   .closeRecipeButton {
       color: #555555;
       position: relative;
       float: right;
       right: 1%;
       background-color: #ededed;
       width: 20px;
       height: 20px;
       margin-top: 2px;
       text-align: center;
       font-family: sans-serif;
       border-radius: 50%;
   }
   .closeRecipeButton:hover {
       cursor: pointer;
       background-color: #ff7f7f;
   }
   .recipeContainer {
       position: relative;
       /* border: 2px solid orange; */
       width: 18%;
       max-height: 18em;
       margin-right: 1.5%;
       margin-bottom: 14px;
       text-align: center;
   }
   .recipeSpamPic {
       max-width: 100%;
       max-height: 100%;
       opacity: 0.9;
       margin: 0 auto;
       z-index: 499;
   }
   .recipeContentDiv {
       border: 2px solid #ededed; 
       border-radius: 3px;
       position: absolute;
       top: 200px;
       left: 28%;
       width: 46%;
   }
   .recipeTopBar {
       height: 26px;
       background-color: #EDEDED;
   }
   .recipeContent {
       overflow: scroll;
       background-color: #ffffff;
       opacity: 0.9;
       padding: 16px;
       font-size: 17px;
       height: 300px;
       overflow-x: hidden;
   }
   .recipeContainer:hover {
       cursor: pointer;
   }
   .recipeContainer:hover > .recipeTitle {
       visibility: visible;
   }
   .recipeTitle {
       display: table;
       visibility: hidden;
       position: absolute;
       opacity: 0.99;
       z-index: 500;
       width: 70%;
       max-width: 70%;
       left: 14%;
       top: 26%;
       color: white;
       max-width: 70%;
       font-size: 22px;
       margin: 0 auto;
   }
   
   .submitRecipeForm {
       display: block;
   }
   .blogText {
       font-size: 17px;
   }
   .size-full {
       min-width: 70%;
       max-width: 70%;
       width: 70%;
       opacity: 0.94;
   }
   a {
       text-decoration: none;
       color: inherit;
   }
   .pageTitle {
       /* border: 2px solid green; */
       padding-top: 10px;
       padding-bottom: 10px;
       max-height: 40px;
       margin: 0;
       text-align: center;
   }
   .nav {
       /* border: 2px solid blue; */
       text-align: center;
   }
   .navItems {
       display: inline-block;
       /* border: 2px solid cyan; */
       text-align: center;
       margin-left: auto;
       margin-right: auto;
   }
   .navItem {
       display: inline-block;
       width: 220px;
       /* border: 2px solid violet; */
       padding-top: 6px;
       padding-bottom: 6px;
       margin: 0;
   }
   .pageBody {
       /* border: 2px solid red; */
       margin-left: 13vw;
       margin-right: 13vw;
       -webkit-animation: fadein 0.6s; /* Safari, Chrome and Opera > 12.1 */
       -moz-animation: fadein 0.6s; /* Firefox < 16 */
        -ms-animation: fadein 0.6s; /* Internet Explorer */
         -o-animation: fadein 0.6s; /* Opera < 12.1 */
            animation: fadein 0.6s;
   }
   @keyframes fadein {
       from { opacity: 0; }
       to   { opacity: 1; }
   }
   #+END_SRC 

** Mobile
   #+BEGIN_SRC css :noweb-ref cssm
   @media screen and (max-device-width: 800px) {
   
   }
   #+END_SRC 

* Pages
** ./index.html
   components 
     [[htmlhead]]
     [[vueLink]]
     [[nav]]

     How to use something like 'dangerous rendering'
     https://vuejs.org/v2/guide/syntax.html#Raw-HTML

   #+BEGIN_SRC html :noweb yes :tangle ./index.html
   <<htmlhead>>
   <body>
       <<vueLink>>
       <<nav>>
       <div id='blogBody' class='pageBody'>
           <div v-for="post in posts">
               <h2 class="blogTitle" v-html="post.title"></h2>
               <p class="blogText" v-html="post.content"></p>
           </div>
       </div>
       <script>
           const blogBody = new Vue({
               el: '#blogBody',
               data: {
                   posts: []
               },
               created () {
                   fetch('https://public-api.wordpress.com/wp/v2/sites/145375323/posts/?per_page=100')
                       .then(response => response.json())
                       .then(json => {
                           console.log(json)
                           for (var x of json) {
                               if (x.tags[0] == "35776") {
                                   this.posts.push({"title": x.title.rendered, "content": x.content.rendered})
                               }
                           }
                       })
               }
           })
       </script>
   </body>
   </html>
   #+END_SRC 

** ./about.html
   components 
     [[htmlhead]]
     [[vueLink]]
     [[nav]]

   #+BEGIN_SRC html :noweb yes :tangle ./about.html
   <<htmlhead>>
   <body>
       <<vueLink>>
       <<nav>>
       <div class='pageBody'>
           <h2 class='pageHeader'>about</h2>
           <p>This is the about page.</p>
       </div>
   </body>
   </html>
   #+END_SRC 

** ./recipes.html
   components 
     [[htmlhead]]
     [[vueLink]]
     [[nav]]

   #+BEGIN_SRC html :noweb yes :tangle ./recipes.html
   <<htmlhead>>
   <body>
       <<vueLink>>
       <<nav>>
       <div id='blogBody' class='pageBody'>

           <h2 class='pageHeader'>stories and recipes</h2>

           <div class="recipesDiv">
               <div class="recipeContainer" v-for="post in posts" v-on:click="displayRecipeText" v-bind:id="post.id">
                   <h2 class="recipeTitle" v-html="post.title" v-bind:id="post.id"></h2>
                   <img class="recipeSpamPic" v-bind:src="post.spamPicNumber" v-bind:id="post.id"></img>
               </div>
           </div>

           <div class="displayRecipes" v-for="post in posts" v-bind:id="'id'+post.id">
               <div class="recipeContentDiv">
                   <div class="recipeTopBar" id="drag_me">
                       <div class="closeRecipeButton" v-on:click="closeRecipeText">x</div>
                   </div>
                   <div class="recipeContent">
                       <p v-html="post.content"></p>
                       <p v-html="'- '+post.title"></p>
                   </div>
               </div>
           </div>

           <h3>Submit your own recipe or thoughts on SPAM:</h3>
           <form class="submitRecipeForm" action="https://formspree.io/gibsonhdrew@gmail.com" method="POST">
               <input type="text" name="Your Name" placeholder="Name"><br/>
               <input type="text" name="Recipe / Story Title" placeholder="Recipe / Story Title"><br/>
               <input type="text" name="Text" placeholder="Text"><br/>
               <input type="submit" value="Send">
           </form> 
       </div>
       <script>
           const blogBody = new Vue({
               el: '#blogBody',
               data: {
                   posts: []
               },
               methods: {
                   displayRecipeText(event) {
                       let closeTheseRecipes = document.getElementsByClassName("displayRecipes")
                       for (let x of closeTheseRecipes) {
                           if (closeTheseRecipes.id != 'id'+event.target.id) {
                               x.style.visibility = "hidden";
                           }
                       }
                       let chosenRecipe = document.getElementById('id'+event.target.id)
                       chosenRecipe.style.visibility = "visible";
                   },
                   closeRecipeText(event) {
                      let closeAllRecipes = document.getElementsByClassName("displayRecipes")
                      for (let x of closeAllRecipes) {
                          x.style.visibility = "hidden";
                      }
                   }
               },
               created () {
                   fetch('https://public-api.wordpress.com/wp/v2/sites/145375323/posts/?per_page=100')
                       .then(response => response.json())
                       .then(json => {
                           console.log(json)
                           let spamPicCounter = 1
                           for (var x of json) {
                               if (x.tags[0] == "2832") {
                                   this.posts.push({
                                       "id": x.id, 
                                       "title": x.title.rendered, 
                                       "content": x.content.rendered,
                                       "spamPicNumber": "./images/Slice_"+spamPicCounter+".png"
                                   })
                                   if (spamPicCounter < 15) {
                                       spamPicCounter++;
                                   } else spamPicCounter = 1;
                               }
                           }
                       })
               }
           })
       </script>
   </body>
   </html>
   #+END_SRC 

** ./contact.html
   components 
     [[htmlhead]]
     [[vueLink]]
     [[nav]]

   #+BEGIN_SRC html :noweb yes :tangle ./contact.html
   <<htmlhead>>
   <body>
       <<vueLink>>
       <<nav>>
       <div class='pageBody'>
           <h2 class='pageHeader'>contact</h2>
           <p>This is the contact page.</p>
       </div>
   </body>
   </html>
   #+END_SRC 

   
   
